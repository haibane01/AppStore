//
//  RankedAppListViewController.swift
//  AppStore
//
//  Created Sang Tae Kim on 2017. 3. 22..
//  Copyright © 2017년 haibane. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

final class RankedAppListViewController: UIViewController, RankedAppListViewProtocol {
    
    lazy var rankedAppListViewPresentor: RankedAppListViewPresentorProtocol = RankedAppListViewPresentor()
    fileprivate var rankedAppList: [RankedAppType]?
    @IBOutlet fileprivate weak var rankedAppListTableView: UITableView!

    override func viewDidLoad() {
        super.viewDidLoad()
        rankedAppListViewPresentor.rankedAppListView = self
        rankedAppListViewPresentor.viewDidLoad()
        configureRankedAppListTableView()
    }
    
    private func configureRankedAppListTableView() {
        rankedAppListTableView.estimatedRowHeight = 60
        rankedAppListTableView.rowHeight = UITableViewAutomaticDimension
        rankedAppListTableView.tableFooterView = UIView()
        rankedAppListTableView.register(UINib(nibName: "RankedAppTableViewCell", bundle: nil), forCellReuseIdentifier: "RankedAppTableViewCell")
    }
    
    func show(from rankedAppList:[RankedAppType]?) {
        self.rankedAppList = rankedAppList
        rankedAppListTableView?.reloadData()
    }

}

extension RankedAppListViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: false)
        rankedAppListViewPresentor.didSelect(rankedAppList?.item(at: indexPath.row))
    }
}

extension RankedAppListViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return rankedAppList?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "RankedAppTableViewCell", for: indexPath) as! RankedAppTableViewCell
        if var rankedAppData = rankedAppList?.item(at: indexPath.row) {
            rankedAppData.rank = indexPath.row + 1
            cell.configure(with: rankedAppData)
        }
        return cell
    }
}

